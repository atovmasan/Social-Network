{"ast":null,"code":"import { createSelector } from \"reselect\";\nconst getUsersSelector = state => {\n  return state.usersPage.users;\n};\nexport const getUsers = createSelector(getUsersSelector, users => {\n  return users.filter(u => true);\n});\nexport const getPageSize = state => {\n  return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = state => {\n  return state.usersPage.totalUsersCount;\n};\nexport const getCurrentPage = state => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = state => {\n  return state.usersPage.followingInProgress;\n};\nexport const countSomethingDifficult = state => {\n  debugger;\n  //for... math... big arrays\n  let count = 23;\n  return count;\n};","map":{"version":3,"names":["createSelector","getUsersSelector","state","usersPage","users","getUsers","filter","u","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","countSomethingDifficult","count"],"sources":["C:/Users/yt988/OneDrive/Documents/My/Programming/react-way-of-samurai/src/redux/users-selectors.js"],"sourcesContent":["import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}"],"mappings":"AAAA,SAAQA,cAAc,QAAO,UAAU;AAEvC,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAChC,OAAOA,KAAK,CAACC,SAAS,CAACC,KAAK;AAChC,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGL,cAAc,CAACC,gBAAgB,EAClDG,KAAK,IAAK;EACX,OAAOA,KAAK,CAACE,MAAM,CAACC,CAAC,IAAI,IAAI,CAAC;AAClC,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAIN,KAAK,IAAK;EAClC,OAAOA,KAAK,CAACC,SAAS,CAACM,QAAQ;AACnC,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIR,KAAK,IAAK;EACzC,OAAOA,KAAK,CAACC,SAAS,CAACQ,eAAe;AAC1C,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIV,KAAK,IAAK;EACrC,OAAOA,KAAK,CAACC,SAAS,CAACU,WAAW;AACtC,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIZ,KAAK,IAAK;EACpC,OAAOA,KAAK,CAACC,SAAS,CAACY,UAAU;AACrC,CAAC;AACD,OAAO,MAAMC,sBAAsB,GAAId,KAAK,IAAK;EAC7C,OAAOA,KAAK,CAACC,SAAS,CAACc,mBAAmB;AAC9C,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAIhB,KAAK,IAAK;EAC9C;EACA;EACA,IAAIiB,KAAK,GAAG,EAAE;EACd,OAAOA,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}