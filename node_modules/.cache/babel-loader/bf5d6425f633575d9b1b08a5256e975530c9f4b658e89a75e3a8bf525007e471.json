{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yt988\\\\OneDrive\\\\Documents\\\\My\\\\Programming\\\\Social-Network\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\nlet Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  _s();\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cn(styles.paginator),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: cn({\n        [styles.selectedPage]: currentPage === p\n      }, styles.pageNumber),\n      key: p,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"NEXT\"));\n};\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n_c = Paginator;\nexport default Paginator;\nvar _c;\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","useState","styles","cn","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","_s","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","createElement","className","paginator","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filter","p","map","selectedPage","pageNumber","key","e","_c","$RefreshReg$"],"sources":["C:/Users/yt988/OneDrive/Documents/My/Programming/Social-Network/src/components/common/Paginator/Paginator.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,EAAE,MAAM,YAAY;AAE3B,IAAIC,SAAS,GAAGA,CAAC;EAACC,eAAe;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,aAAa;EAAEC,WAAW,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EAE3F,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACR,eAAe,GAAGC,QAAQ,CAAC;EAEtD,IAAIQ,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,UAAU,EAAEI,CAAC,EAAE,EAAE;IAClCD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;EACjB;EAEA,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAI,CAACF,UAAU,GAAGF,WAAW,CAAC;EACtD,IAAI,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnD,IAAImB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAC,IAAIT,WAAW,GAAG,CAAC;EACjE,IAAIY,sBAAsB,GAAGH,aAAa,GAAGT,WAAW;EAGxD,oBAAOT,KAAA,CAAAsB,aAAA;IAAKC,SAAS,EAAEpB,EAAE,CAACD,MAAM,CAACsB,SAAS,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtCZ,aAAa,GAAG,CAAC,iBACnBlB,KAAA,CAAAsB,aAAA;IAAQS,OAAO,EAAEA,CAAA,KAAM;MAAEZ,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;IAAC,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAY,CAAC,EAExEhB,KAAK,CACDkB,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAIb,qBAAqB,IAAIa,CAAC,IAAEZ,sBAAsB,CAAC,CACpEa,GAAG,CAAED,CAAC,IAAK;IACZ,oBAAOjC,KAAA,CAAAsB,aAAA;MAAMC,SAAS,EAAGpB,EAAE,CAAC;QACxB,CAACD,MAAM,CAACiC,YAAY,GAAG5B,WAAW,KAAK0B;MAC3C,CAAC,EAAE/B,MAAM,CAACkC,UAAU,CAAG;MACVC,GAAG,EAAEJ,CAAE;MACPF,OAAO,EAAGO,CAAC,IAAK;QACZ9B,aAAa,CAACyB,CAAC,CAAC;MACpB,CAAE;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEG,CAAQ,CAAC;EAC9B,CAAC,CAAC,EACJhB,YAAY,GAAGC,aAAa,iBAC1BlB,KAAA,CAAAsB,aAAA;IAAQS,OAAO,EAAEA,CAAA,KAAM;MAAEZ,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;IAAC,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAY,CAG/E,CAAC;AACV,CAAC;AAAApB,EAAA,CAnCGN,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAqCb,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}